name: Lint Rust Worskapce
description: Run lints and format checks on Rust workspace code
inputs:
  manifest_path:
    description: Path to the Cargo.toml manifest of the Rust sources to lint
    default: ${{ github.workspace }}/Cargo.toml
    required: false
  token:
    description: GitHub secret token used by clippy-check action
    required: true
  features:
    description: Features to enable, separated by comma
    required: false
  exclude:
    description: Packages to exclude, separated by comma
    required: false
runs:
  using: composite
  steps:
    - name: Clippy check
      shell: bash
      env:
        MANIFEST_PATH: ${{ inputs.manifest_path }}
        FEATURES: ${{ inputs.features }}
        EXCLUDE: ${{ inputs.exclude }}
      run: |
        if [[ -z "$FEATURES" ]]; then
          FEATURES_ARG=("--all-features")
        else
          FEATURES_ARG=("--features" "$FEATURES")
        fi

        if [[ -z "$EXCLUDE" ]]; then
          EXCLUDE_ARG=("")
        else
          EXCLUDE_ARG=("--workspace")
          for PKG in ${EXCLUDE//,/ }; do
            EXCLUDE_ARG+=("--exclude" "$PKG")
          done
        fi

        cargo clippy \
          ${FEATURES_ARG[@]} \
          ${EXCLUDE_ARG[@]} \
          --locked \
          --manifest-path "$MANIFEST_PATH" \
          -- \
          -D warnings \
          -D clippy::dbg_macro \
          -A clippy::upper-case-acronyms

    - name: Formatting check
      shell: bash
      env:
        MANIFEST_PATH: ${{ inputs.manifest_path }}
      run: cargo fmt --all --manifest-path "$MANIFEST_PATH" -- --check
